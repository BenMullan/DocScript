<?xml version="1.0"?>
<doc>
<assembly>
<name>
DocScript.WebParts
</name>
</assembly>
<members>
<member name="P:DocScript.My.MyWebExtension.Application">
	<summary>
 Returns information about the current application.
 </summary>
</member><member name="P:DocScript.My.MyWebExtension.Computer">
	<summary>
 Returns information about the host computer.
 </summary>
</member><member name="P:DocScript.My.MyWebExtension.User">
	<summary>
 Returns information for the current Web user.
 </summary>
</member><member name="P:DocScript.My.MyWebExtension.Request">
	<summary>
 Returns Request object.
 </summary>
</member><member name="P:DocScript.My.MyWebExtension.Response">
	<summary>
 Returns Response object.
 </summary>
</member><member name="P:DocScript.My.MyWebExtension.Log">
	<summary>
 Returns the Asp log object.
 </summary>
</member><member name="P:DocScript.My.MyWebExtension.WebServices">
	<summary>
 Provides access to WebServices added to this project.
 </summary>
</member><member name="T:DocScript.My.MyWebExtension">
	<summary>
 Module used to define the properties that are available in the My Namespace for Web projects.
 </summary>
	<remarks></remarks>
</member><member name="M:DocScript.WebParts.APIResponse.FromInternalServerError(System.String)">
	<summary>
 Constructs an APIResponse Object to indicate that an unhandled Exception occured on the Server.
 HTTP Status Code: 500
 </summary>
	<param name="_ErrorMsg">The DAR Error Message explaining why the Internal Server Error may have occured</param>
</member><member name="M:DocScript.WebParts.APIResponse.FromInvalidRequest(System.String)">
	<summary>
 Constructs an APIResponse Object to indicate that the Client's Request was syntactically-invalid, or did not include all nessecary QueryStrings or PostData.
 HTTP Status Code: 400
 </summary>
	<param name="_ErrorMsg">The DAR Error Message explaining why the Client's Request is invalid</param>
</member><member name="M:DocScript.WebParts.APIResponse.FromValidRequest">
	<summary>
 Constructs an APIResponse Object with no ResponseContent, indicating that the request was processed successfully.
 HTTP Status Code: 200
 </summary>
</member><member name="M:DocScript.WebParts.APIResponse.FromValidRequest(System.String[][])">
	<summary>
 Constructs an APIResponse Object with the specified KeyValuePairs.
 HTTP Status Code: 200
 </summary>
	<param name="_ResponseContent_KVPs">The XML Attributes of the ResponseContent Node</param>
</member><member name="M:DocScript.WebParts.APIResponse.FromValidRequest(System.String[][],System.Xml.Linq.XElement[])">
	<summary>
 Constructs an APIResponse Object with the specified KeyValuePairs and XMLChildren.
 HTTP Status Code: 200
 </summary>
	<param name="_ResponseContent_KVPs">The XML Attributes of the ResponseContent Node</param>
	<param name="_ResponseContent_XMLChildren">The XML Children of the ResponseContent Node</param>
</member><member name="M:DocScript.WebParts.APIResponse.FromLongPollingTimeout">
	<summary>
 Constructs an APIResponse Object to indicate that the response is only being sent because an AJAX-LongPolling Request Timed out.
 HTTP Status Code: 200
 </summary>
</member><member name="M:DocScript.WebParts.APIResponse.Send(System.Web.HttpResponse@)">
	<summary>Clears the Response, then writes the APIResponse to the _HTTPResponseStream after setting the HTTP Status Code and MIME Type. The Response is then Ended.</summary>
</member><member name="M:DocScript.WebParts.APIResponse.ToString">
	<summary>
 Returns the XML for this APIResponse as a String, E.g. ready for it to be written to a HTTP Response Stream.
 Do not use this method to send the APIResponse; use .Send() instead!
 </summary>
</member><member name="T:DocScript.WebParts.APIResponse">
	<summary>Respresents a DocScript API Response. Can be serialised to XML to be sent off to the Client.</summary>
</member><member name="M:DocScript.WebParts.ExecutionSessionMethods.AwaitSessionInitiation(System.Web.HttpRequest@,System.Web.HttpResponse@)">
	<summary>Waits for a maximum of 120 seconds for the ExeSes to start, otherwise Responds with a LongPollingTimeout.
 Response when the ExeSes's "State" is [Running] OR [Finished].</summary>
</member><member name="M:DocScript.WebParts.ExecutionSessionMethods.ListenForESEvents(System.Web.HttpRequest@,System.Web.HttpResponse@)">
	<summary>Waits for a maximum of 120 seconds for an ES-Event to befall, otherwise Responds with a LongPollingTimeout</summary>
</member><member name="M:DocScript.WebParts.ExecutionSessionMethods.ListenForInputInterrupts(System.Web.HttpRequest@,System.Web.HttpResponse@)">
	<summary>Waits for a maximum of 120 seconds for an InputResponse to be provided, otherwise Responds with a LongPollingTimeout</summary>
</member><member name="M:DocScript.CompilerExtentions.HTTPObjectExtentions.GetScriptAndCSSImports(System.Web.HttpResponse@)">
	<summary>
 (MullNet CompilerExtention) Writes the opening html, head (etc...) elements, importing the required scripts too.
 </summary>
	<remarks></remarks>
</member><member name="M:DocScript.CompilerExtentions.HTTPObjectExtentions.EnsureTheseQueryStringsAreSpecified(System.Web.HttpRequest@,System.Web.HttpResponse@,System.String[])">
	<summary>
 (MullNet CompilerExtention) Checks that the Specified Required QueryString Keys are contained in the current Request Object, AND that they each HAVE VALUES.
 </summary>
	<param name="_RequestObject">(Filled in by the CompilerExtention)</param>
	<param name="_ResponseObject">This is needed in case a QueryString is missing, in which case an APIResponse is sent back, informing the user of the missing Parameter</param>
	<remarks></remarks>
</member><member name="M:DocScript.CompilerExtentions.HTTPObjectExtentions.EnsureThesePostDataKeysAreSpecified(System.Web.HttpRequest@,System.Web.HttpResponse@,System.String[])">
	<summary>
 (MullNet CompilerExtention) Checks that the Specified Required Post Data Keys are contained in the current Request Object, and that they HAVE VALUES.
 </summary>
	<param name="_RequestObject"></param>
	<param name="_ResponseObject">This is needed in case a PostData Key is missing, in which case an APIResponse is sent back, informing the user of the missing Parameter</param>
	<remarks></remarks>
</member><member name="M:DocScript.WebParts.Resources.InitialiseWebExecutionEnvironment(System.String)">
	<summary>Prepares the LogEventHandler</summary>
</member><member name="P:DocScript.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:DocScript.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:DocScript.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetUploadedProgramsWithoutSource">
	<summary>Gets the "ProgramName" and "TimeUploaded" from the UploadedPrograms Table</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetUploadedProgramSource(System.String)">
	<summary>Ensures an UploadedProgram with _ProgramName exists. Gets the "Source" from the UploadedPrograms Table</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.AddUploadedProgram(System.String,System.String)">
	<summary>Handles the clensing and duplicate-name detection. Returns the ProgramSavedAsName</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetExistingExecutionSessions">
	<summary>Returns the XElements to represent the existing ESs</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.CreateExecutionSession(System.String)">
	<summary>Returns the ESID of the created ExeSes. Ensures that a Program Exists with the specified _ProgramName</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetExecutionSesionState(System.String)">
	<summary>Returns Ready|Running|Finished. Ensures that an ES exists with the specified _ESID</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetUploadedProgramFromESID(System.String)">
	<summary>Returns the Source, of the Program referenced by the ExeSes with _ESID</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.SetExecutionSessionState_Running(System.String)">
	<summary>Automatically updates the TimeStarted</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.SetExecutionSessionState_Finished(System.String,System.String)">
	<summary>Automatically updates the TimeEnded</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.SetExecutionSessionState_Ready(System.String)">
	<summary>Ensures that the ExeSes is currently [Finished] (or already Ready)</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.AddExecutionSessionLogEvent(System.String,DocScript.Logging.LogEvent)">
	<summary>Handles the seperation of the LogEvent's Members</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.AddExecutionSessionOutputEvent(System.String,System.String)">
	<summary>Inserts into the {ESID}_Outputs Table</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.AddExecutionSessionCEP(System.String,System.String)">
	<summary>Inserts into the {ESID}_CEPs Table</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.AddExecutionSessionInputEvent_RequestPart(System.String,System.String)">
	<summary>Inserts into the {ESID}_Inputs Table. Returns the ID of the newly-inserted InputEvent.</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.AddExecutionSessionInputEvent_ResponsePart(System.String,System.UInt32,System.String)">
	<summary>Blind UPDATE Statement; does NOT ensure that a Response hasn't already been specified. Automatically updates the Responded-to Time</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetExecutionSesionOutputEvents(System.String)">
	<summary>Returns each &lt;OutputEvent/&gt; as an XElement with "ID", "TimeSubmitted", and "OutputMessage"</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetExecutionSesionInputEvents(System.String)">
	<summary>Returns each &lt;InputEvent/&gt; as an XElement with "ID", "TimeSubmitted", "InputPrompt", "InputResponse", and "RespondedToTime"</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetExecutionSesionLogEvents(System.String)">
	<summary>Returns each &lt;LogEvent/&gt; as an XElement with "ID", "TimeSubmitted", "Message", "Severity", and "Category"</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.GetExecutionSesionCEPs(System.String)">
	<summary>Returns each &lt;CEP/&gt; as an XElement with "ID", "TimeSubmitted", and "JavaScriptToRun"</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.ResetExecutionSession(System.String)">
	<summary>Clears LogEvents, Outputs, and Inputs</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.DeleteExecutionSession(System.String)">
	<summary>Removes the ES's Record in the ExecutionSessions Table, and Deletes the 4 Events' Tables for the ES</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.DeleteUploadedProgram(System.String)">
	<summary>Removes the Program's Record in the UploadedPrograms Table</summary>
</member><member name="M:DocScript.WebParts.DatabaseInteraction.DeleteExecutionSessionCEP(System.String,System.String)">
	<summary>Removes the CEP's Record in the {_ESID}_CEPs Table</summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.DBContent.StandardDBIdentifierChars">
	<summary>Used when clensing incomming Identifiers for the DSI-DB</summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Insert_UploadedProgram">
	<summary>SQLParameters needed: @TheProgramName, @TheSource</summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Insert_NewExecutionSession">
	<summary>SQLParameters needed: @TheESID, @TheProgramName</summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Insert_ExecutionSessionLogEvent(System.String)">
	<summary>SQLParameters needed: @TheMessage, @TheSeverity, @TheCategory</summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Insert_ExecutionSessionOutputEvent(System.String)">
	<summary>SQLParameters needed: @TheOutputMessage</summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Insert_ExecutionSessionCEP(System.String)">
	<summary>SQLParameters needed: @TheJavaScriptToRun</summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Insert_ExecutionSessionInputEvent_AndSelectLatestID(System.String)">
	<summary>SQLParameters needed: @TheInputPrompt</summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Update_ExecutionSession_InputResponse(System.String)">
	<summary>SQLParameters needed: @TheInputResponse, @TheInputEventID</summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Create_ExecutionSession_OutputsTable(System.String)">
	<summary>SQLParameters needed: </summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Create_ExecutionSession_InputsTable(System.String)">
	<summary>SQLParameters needed: </summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Create_ExecutionSession_LogEventsTable(System.String)">
	<summary>SQLParameters needed: </summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Create_ExecutionSession_CEPsTable(System.String)">
	<summary>SQLParameters needed: </summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Select_AllExecutionSession_TableRecords(System.String,System.String)">
	<summary>SQLParameters needed: </summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Delete_AllExecutionSession_TableRecords(System.String,System.String)">
	<summary>SQLParameters needed: </summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Delete_ExecutionSession_CEP(System.String)">
	<summary>SQLParameters needed: @TheID</summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Delete_ExecutionSessionRecord">
	<summary>SQLParameters needed: @TheESID</summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Delete_UploadedProgramRecord">
	<summary>SQLParameters needed: @TheProgramName</summary>
</member><member name="P:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Drop_ExecutionSession_Table(System.String,System.String)">
	<summary>SQLParameters needed: </summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Select_UploadedProgramsWithoutSource">
	<summary>SQLParameters needed: </summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Select_UploadedProgramSource">
	<summary>SQLParameters needed: @TheProgramName</summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Select_AllExecutionSessions">
	<summary>SQLParameters needed: </summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Select_UploadedProgram_WhereProgramName">
	<summary>SQLParameters needed: </summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Update_ExecutionSessionState_Running">
	<summary>SQLParameters needed: @TheESID</summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Update_ExecutionSessionState_Finished">
	<summary>SQLParameters needed: @TheESID, @TheExitReason</summary>
</member><member name="F:DocScript.WebParts.DatabaseInteraction.SQLQueries_.Update_ExecutionSessionState_Ready">
	<summary>SQLParameters needed: @TheESID</summary>
</member>
</members>
</doc>