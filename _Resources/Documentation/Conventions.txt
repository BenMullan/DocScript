Solution Conventions:
---------------------

|Notation:		|Meaning:															|
|---------------|-------------------------------------------------------------------|
|No.			|Number Of															|
|UpToInc *		|Up To and Including *												|
|UpToExc *		|Up To but Excluding *												|
|<*>			|Of the DataType * (DocScript Source)								|
|_*				|* is an Identifier for a Local Item								|
|*_				|* is an Identifier for a Private or Protected Item					|
|*__			|* is an identifier for a Friend Item								|
|_*_			|* is an Identifier for a Static (!= Shared) Item					|
|T*				|* is a Generic Type Specifier										|
|I*				|* is an Interface													|
|Ensures *		|Throws an Exception if * is not the case							|
|DS*Exception	|* inherits from System.Exception									|
|[*]			|WebParts API: * will be returned, as an XML Attr.					|
|[...*]			|WebParts API: * will be returned, when Long-Polling ends			|
|[<*>]			|WebParts API: * will be returned, within &lt;ResponseContent&gt;	|


General:
--------
- CompilerExpentions should generally not modify the input parameter; they should only return the output. The Method names should reflect this. E.g., "WithLastCharacterRemoved()" instead of "RemoveLastCharacter()"
- Solution Files are named according to whatever the most narrowed-down logical container is (Namespace, Class, or Module etc...)
- Remember to "ALTER DATABASE [DocScript] SET ENABLE_BROKER;" in order for [SqlDependancy]s to work. As of 01-01-2023, DSInteractive no longer uses a QueryWatch anyway, so this isn't needed.
- The ToString() of an Instruction or Expression, returns what the it would have looked like in the Source


Volcabulary:
------------
- Upstairs/Downstairs		A new recursivly-created stack frame, logically above/below the current one on the Stack
- Upstream/Downstream		A component which exists forwards/backwards of the current one, along a linear structure


[Ctrl + F] Global Search Codes:
-------------------------------
- **NI				Not Implemented
- **ToDo			Minor improvement to be made at a later date
- **ChangeLog		A component of an algorithm has been updated on the specified date


Abbreviations:
--------------
- LBL		Linear Bracketed Level (ExprTree Construction)
- IOT		Intermediate Operator Tree (ExprTree Construction)
- SCI		Scanned Component Indicator (ExprTree Construction)
- ESID		ExecutionSession Identifier (DocScript Interactive)
- IEID		Input Event Identifier (DocScript Interactive)
- CEP		Client Execution Package (DocScript Interactive)
- TPV		Tokens to (Token)Patterns Validator (Lexing)
- IR		Intermediate Representation (Lexing; the Instruction Tree)


DocScript Compilation - Planning
- EXE Options
	- Compile as either a Windows Program or Console Program

- Process:
	- Locate MSBuild.exe: Framework64\> dir /s /b MSBuild.exe
	- Create VBProj?
	- Perhaps:	MSBuild /property:Configuration=Release MyFile.vbproj
	- Possibly:	vbc -reference:Microsoft.VisualBasic.dll File.vb
	- Try:		vbc -target:library -ref:.\debug\bin\ref\file.dll File.vb

What about:
- Package the DocScript Source and DSCore.dll, inside a single .exe
- Would need compile an EXE File like this:
		
		Public Module [DSProgram]
			
			Public Function [Main](ByVal [_CLAs] As [String]()) As [Int32]
				
				Dim [_ExeCxtToUse] As [ExecutionContext] = [ExecutionContext].[CLIDefault]

				Dim [_Program] As [Program] = _
					[Program].[FromSource]([_Source]:=[DSProgram].[DSSource], [_ExeCxt]:=[_ExeCxtToUse])

				Return [_Program].[Run](My.Application.CommandLineArguments).[ReturnStatus].[Program_ExitCode]
				
			End Function
			
			Public [DSSource] As [String] = _
				"Function <Void> Main ()" & vbcrlf & _
					"Return" & vbcrlf & _
				"EndFunction"

		End Module